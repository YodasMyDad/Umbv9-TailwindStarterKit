@model Umb9.Core.Shared.Models.BlockListViewModel
@{
    var content = Model.BlockListItem.Content as Umb9.Core.UmbracoModels.ContentBoxesBlock;
    var settings = Model.BlockListItem.Settings as Umb9.Core.UmbracoModels.ContentBoxesSettings;
}
<div class="@(settings.PaddingTop.IsNullOrWhiteSpace() ? "" : $"pt-{settings.PaddingTop} ")@(settings.PaddingBottom.IsNullOrWhiteSpace() ? "" : $"pb-{settings.PaddingBottom}")">
    <div class="relative bg-gray-50 pt-16 pb-20 px-4 sm:px-6 lg:pt-18 lg:pb-28 lg:px-8">
        <div class="absolute inset-0">
            <div class="bg-white h-1/3 sm:h-2/3"></div>
        </div>
        <div class="relative max-w-7xl mx-auto">
            <div class="text-center">
                @{HeadingTypes("text-3xl tracking-tight font-extrabold text-gray-900 sm:text-4xl");}
                <div class="mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4">
                    @Html.Raw(content.Text)
                </div>
            </div>
            <div class="mt-12 max-w-lg mx-auto grid gap-5 lg:grid-cols-3 lg:max-w-none">
                @(await Html.PartialAsync("_BlockListComponents", (content.ContentBoxes, Model.WebsiteId)))
            </div>
        </div>
    </div>
</div>


@{
    void HeadingTypes(string cssClasses)
    {
        @switch (settings.HeadingType)
        {
            case "H1":
                <h1 class="@cssClasses">@content.Heading</h1>
                break;

            case "H2":
                <h2 class="@cssClasses">@content.Heading</h2>
                break;

            case "H4":
                <h4 class="@cssClasses">@content.Heading</h4>
                break;

            case "H5":
                <h5 class="@cssClasses">@content.Heading</h5>
                break;

            case "H6":
                <h6 class="@cssClasses">@content.Heading</h6>
                break;

            default:
                <h3 class="@cssClasses">@content.Heading</h3>
                break;
        }
    }
}